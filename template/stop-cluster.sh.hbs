#!/usr/bin/env bash

client_name={{ client }}
client_namespace=perfana-starter-{{ client }}

# Check if kubectl is installed
if ! command -v kubectl &> /dev/null; then
    echo "kubectl is not installed. Please install kubectl first."
    exit 1
fi

# Check if helm is installed
if ! command -v helm &> /dev/null; then
    echo "Helm is not installed. Please install Helm first."
    exit 1
fi

kubectx=`kubectl config current-context`
# check with user for context and namespace
    if [[ -z $kubectx ]]; then
    echo "There is no k8s cluster available or selected. Please make sure you have a k8s cluster available."
    exit 1
fi

kubectl config set-context --current --namespace=$client_namespace

echo "Remove Afterburner SUT"
kubectl delete -f afterburner.yaml

echo "Delete OpenTelemetry Collector"
kubectl delete -f otel-collector-gen.yaml

echo "Delete Grafana Agent"
kubectl delete -f grafana-agent.yaml

echo "Delete loadtest container"
kubectl delete -f loadtest.yaml
kubectl delete configmaps loadtest-{{ loadTestTool }}.tar.gz
kubectl delete configmaps pom.xml

echo "Remove perfana-secure-gateway"
helm uninstall perfana-secure-gateway

echo "Remove perfana-starter-{{client}} namespace"
kubectl delete namespace $client_namespace

echo "Removed all perfana starter components."
